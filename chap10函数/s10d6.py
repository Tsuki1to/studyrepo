# 开发时间：12/9/2022 下午11:06
def fun(a,b,c):   #a,b,c在函数的定影处，所以是形式参数
    print('a=',a)
    print('b=',b)
    print('c=',c)


#函数的调用
fun(10,20,30)  #函数调用时的参数传递，称为位置传参

lst=[10,20,30]
fun(*lst)  #将函数调用时，将列表中的每个元素都转换位置实参传入

print('-----------------')
fun(a=100,b=200,c=500) #函数的调用，所以是关键字实参
dic={'a':100,'b':200,'c':500}
fun(**dic)   #调用函数的时候将字典中的键值对都转换为关键字实参传入

#-------------------------------------------------------------------------------------

def fun(a,b=19):  #b是在函数的定义处，所以b是形参，而且进行了赋值，所以b称为默认值形参
    print('a=',a)
    print('b=',b)

def fun4(a,b,*,c,d):  #从*之后的参数，参函数调用时，只能采用关键字参数传递
    print('a=',a)
    print('b=', b)
    print('c=', c)
    print('d=', d)

#调用fun4函数
# fun4(10,20,30,40)  #位置实参传输
fun4(a=10,b=20,c=30,d=40)  #关键字实参传输
fun4(10,20,c=30,d=40)  #前两个用位置实参传递，后两个用关键字实参传递

'''
函数定义时的形参顺序问题
'''
def fun5(a,b,*,c,d,**args):
    pass

def fun6(*args,**kwargs):
    pass

def fun7(a,b=10,*args,**kwargs):
    pass

#以上的在函数定义时的顺序均可以